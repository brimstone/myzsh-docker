#!/usr/bin/zsh

docker() {
	local verb="$1"
	local mod="$2"

	case "$verb" in
	clean)
		case "$mod" in
		containers)
			command docker rm $(command docker ps -a -q) 2>/dev/null
		;;
		env)
			unset DOCKER_HOST
			unset DOCKER_CERT_PATH
			unset DOCKER_TLS_VERIFY
		;;
		images)
			if [ -z "$3" ]; then
				command docker rmi $(command docker images | awk '/<none>/ {print $3}') 2>/dev/null
			else
				command docker rmi $(command docker images | awk '/'$3'/ {print $3}') 2>/dev/null
			fi
		;;
		*)
			$0 clean containers
			$0 clean images
		;;
		esac
	;;
	dev)
		if [ -z "$3" ]; then
			command docker run -t -i -v "$PWD:/work" "$mod"
		else
			command docker run -t -i -v "$3:/work" "$mod"
		fi
	;;
	help)
		shift
		if [ -z "$1" ]; then
		command docker help 2>&1 | sed '/wait/a \
\
    myzsh provided commands:\
    clean     Clean up images or containers, or both\
    dev       Run /bin/bash in an image with $PWD mapped in\
    init      Setup boot2docker\
    tail      Show only the last few lines from the log of a container\
    ip        Get the IP of a container\
    describe  Describe how a container was started\
    socket    Run a proxy socket on /tmp/proxysocket.sock\
    shove     Use save and load to push an image into another daemon over ssh' >&2
		fi
	;;
	init)
		if isosx; then
			$(boot2docker shellinit 2>/dev/null | grep HOST)

			if [ -z "$DOCKER_CERT_PATH" ]; then
				$(boot2docker shellinit 2>/dev/null | grep CERT_PATH)
			fi

			if [ -z "$DOCKER_TLS_VERIFY" ]; then
				$(boot2docker shellinit 2>/dev/null | grep TLS)
			fi
		fi
	;;
	tail)
		shift
		container="$1"
		shift
		length=10
		if [ -n "$1" ]; then
			length="$1"
			shift
		fi
		command docker logs -f "$container" 2>&1 \
		| (
			head -n $[ 	$(command docker logs "$container" 2>&1 \
					| wc -l) - $length ] >/dev/null
		cat
		)
	;;
	ip)
		shift
		command docker inspect -f '{{.NetworkSettings.IPAddress}}' "$1"
	;;
	socket)
		sudo socat -t100 -v UNIX-LISTEN:/tmp/proxysocket.sock,mode=777,reuseaddr,fork UNIX-CONNECT:/var/run/docker.sock
	;;
	describe)
		shift
		container="$1"
		shift
		command docker inspect -f "docker run $@ --name {{.Name}}{{range \$index, \$port := .NetworkSettings.Ports}}
{{range \$port}}
 -p {{.HostPort}}:{{\$index}}
{{end}}
{{end}}
{{range .HostConfig.VolumesFrom}}
 --volumes-from {{.}}
{{end}}
{{range .Config.Env}}
 -e {{.}}
{{end}}
{{range \$host, \$guest := .HostConfig.Binds}}
 -v {{\$guest}}
{{end}}
 {{.Config.Image}}
{{range .Args}}
 {{.}}
{{end}}" "$container" | tr -d '\n' | sed -r 's/ -e (HOME|PATH)=[^ ]*//g'
	;;
	shove)
		shift
		size=$(command docker save "$1" | wc -c)
		echo "size: $size"
		set -x
		command docker save "$1" | bzip2 -9 | ssh "$2" 'bzcat | docker load'
		set +x
	;;
	*)
		command docker "$@"
	;;
	esac
}
# vim: filetype=zsh noexpandtab
